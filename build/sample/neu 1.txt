# include <iostream>
# include <string>
# include <unordered_map>
# include <string_view>

struct LocalesMap {
    enum Lang     { ENG, DEU };
    enum Value    {
        App_Copyright,
        App_Success,
        App_Failure,
        App_ParserError,
        App_NoFileGiven,
        // ------------------------------
        App_UnknownMainPageCommand
    };
};

using StringMap = std::unordered_map<LocalesMap::Value, std::string_view>;

const StringMap STRINGS_ENG = {
    { LocalesMap::App_Copyright              , "all rights reserved."      },
    { LocalesMap::App_Success                , "SUCCESS"                   },
    { LocalesMap::App_Failure                , "FAILURE."                  },
    { LocalesMap::App_ParserError            , "parser error."             },
    { LocalesMap::App_NoFileGiven            , "no file is given."         },
    { LocalesMap::App_UnknownMainPageCommand , "unknown mainpage command." },
};

const StringMap STRINGS_DEU = {
    { LocalesMap::App_Copyright              , "Alle Rechte vorbehalten"         },
    { LocalesMap::App_Success                , "Erfolgreich"                     },
    { LocalesMap::App_Failure                , "Fehlgeschlagen"                  },
    { LocalesMap::App_ParserError            , "Parser Fehler"                   },
    { LocalesMap::App_NoFileGiven            , "es wurde keine Datei angegeben." },
    { LocalesMap::App_UnknownMainPageCommand , "unbekanntes mainpage Kommando."  },
};

const std::unordered_map<LocalesMap::Lang, const StringMap*> Translations = {
    { LocalesMap::ENG, &STRINGS_ENG },
    { LocalesMap::DEU, &STRINGS_DEU },
};

class tr_s {
    const StringMap* _tr{};
public:
    tr_s(const StringMap* tr) : _tr(tr) {}

    std::string_view operator()(LocalesMap::Value v) const {
        auto it = _tr->find(v);
        if(it != _tr->end()) return it->second;
        return "<i am error>";
    }
};

const auto& tr = tr_s(Translations.at(LocalesMap::ENG));

int main(int argc, char** argv)
{
    std::cout << "test" << std::endl;
    std::cout << tr(LocalesMap::App_Copyright) << 
    std::endl ;
    return 0;
}
